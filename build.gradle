group 'com.github.smallcreep'
version '0.0.1-SNAPSHOT'

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }
    dependencies {
        classpath "com.gradle:build-scan-plugin:1.8"
    }
}

apply from: rootProject.file('gradle/basic.gradle')

apply plugin: 'maven'
apply plugin: 'signing'

repositories {
    mavenCentral()
}

project.ext {
    junitVersion = "4.12"
    lombokVersion = "1.16.10"
    jcabiAspectsVersion = "0.22.6"
    javaxJsonVersion = "1.1"
    jcabiManifestsVersion = "1.1"
    jcabiHttpVersion = "1.17"
    jsr311ApiVersion = "1.1.1"
    hamcrestVersion = "1.3"
    grizzlyServletWebserverVersion = "2.0.0-M3"
    jerseyClientVersion = "1.19.3"
    log4jVersion = "2.8.2"
    httpclientVersion = "4.5.3"
    equalsverifierVersion = "2.3"
    cactoosVersion = "0.7"
}

dependencies {
    compile "org.projectlombok:lombok:$lombokVersion"
    compile "com.jcabi:jcabi-aspects:$jcabiAspectsVersion"
    compile "javax.json:javax.json-api:$javaxJsonVersion"
    compile "com.jcabi:jcabi-manifests:$jcabiManifestsVersion"
    compile "com.jcabi:jcabi-http:$jcabiHttpVersion"
    compile "javax.ws.rs:jsr311-api:$jsr311ApiVersion"
    compile "org.hamcrest:hamcrest-core:$hamcrestVersion"
    compile "org.hamcrest:hamcrest-library:$hamcrestVersion"
    compile "org.cactoos:cactoos:$cactoosVersion"

    runtime "com.sun.jersey:jersey-client:$jerseyClientVersion"
    runtime "org.glassfish:javax.json:$javaxJsonVersion"

    testCompile "junit:junit:$junitVersion"
    testCompile "nl.jqno.equalsverifier:equalsverifier:$equalsverifierVersion"

    testRuntime "com.sun.grizzly:grizzly-servlet-webserver:$grizzlyServletWebserverVersion"
    testRuntime "org.apache.httpcomponents:httpclient:$httpclientVersion"

    testRuntimeClasspath "org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion"
    testRuntimeClasspath "org.apache.logging.log4j:log4j-core:$log4jVersion"
}

test {
    systemProperties = [
            "failsafe.hub.username": System.getenv("username"),
            "failsafe.hub.password": System.getenv("password"),
            "failsafe.hub.service" : System.getenv("service"),
            "failsafe.hub.secret"  : System.getenv("secret"),
            "failsafe.hub.uri"     : System.getenv("uri"),
            "failsafe.hub.scopes"  : System.getenv("scopes")
    ]
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

tasks.withType(Javadoc) {
    options.tags = [ "checkstyle" ]
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    def ossrhUsername = System.getenv("OSSRH_USERNAME")
    def ossrhPassword = System.getenv("OSSRH_PASSWORD")
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Fluent Api client for JetBrains HUB'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Fluent Api client for JetBrains HUB'
                url 'https://github.com/smallcreep/jb-hub-client'

                scm {
                    connection 'scm:svn:http://foo.googlecode.com/svn/trunk/'
                    developerConnection 'scm:svn:https://foo.googlecode.com/svn/trunk/'
                    url 'http://foo.googlecode.com/svn/trunk/'
                }

                licenses {
                    license {
                        name 'MIT'
                        url 'https://raw.githubusercontent.com/smallcreep/jb-hub-client/master/LICENSE'
                    }
                }

                developers {
                    developer {
                        id 'smallcreep'
                        name 'Ilia Rogozhin'
                        email 'ilia.rogozhin@gmail.com'
                    }
                }
            }
        }
    }
}