group 'com.smallcreep'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'wrapper'
apply plugin: 'project-report'
apply plugin: 'findbugs'
apply plugin: 'jacoco'
apply plugin: 'build-dashboard'
apply plugin: 'pmd'
apply plugin: 'checkstyle'

wrapper {
    gradleVersion = '4.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

project.ext {
    junitVersion = "4.12"
    lombokVersion = "1.16.10"
    jcabiAspectsVersion = "0.22.6"
    javaxJsonVersion = "1.1"
    jcabiManifestsVersion = "1.1"
    jcabiHttpVersion = "1.17"
    jsr311ApiVersion = "1.1.1"
    hamcrestVersion = "1.3"
    grizzlyServletWebserverVersion = "2.0.0-M3"
    jerseyClientVersion = "1.19.3"
    log4jVersion = "2.8.2"
    httpclientVersion = "4.5.3"
    equalsverifierVersion = "2.3"
}

dependencies {
    compile "org.projectlombok:lombok:$lombokVersion"
    compile "com.jcabi:jcabi-aspects:$jcabiAspectsVersion"
    compile "javax.json:javax.json-api:$javaxJsonVersion"
    compile "com.jcabi:jcabi-manifests:$jcabiManifestsVersion"
    compile "com.jcabi:jcabi-http:$jcabiHttpVersion"
    compile "javax.ws.rs:jsr311-api:$jsr311ApiVersion"

    runtime "com.sun.jersey:jersey-client:$jerseyClientVersion"

    testCompile "junit:junit:$junitVersion"
    compile "org.hamcrest:hamcrest-core:$hamcrestVersion"
    compile "org.hamcrest:hamcrest-library:$hamcrestVersion"
    testCompile "nl.jqno.equalsverifier:equalsverifier:$equalsverifierVersion"

    testRuntime "com.sun.grizzly:grizzly-servlet-webserver:$grizzlyServletWebserverVersion"
    testRuntime "org.apache.httpcomponents:httpclient:$httpclientVersion"

    testRuntimeClasspath "org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion"
    testRuntimeClasspath "org.apache.logging.log4j:log4j-core:$log4jVersion"
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

tasks.withType(Pmd) {
    reports {
        xml.enabled true
        html.enabled true
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.80
            }
        }
    }
}

checkstyle.configFile = file(project.rootDir.absolutePath + '/config/checkstyle/checks.xml')

tasks.withType(Checkstyle) {
    reports {
        xml.enabled true
        html.enabled true
    }
}

test {
    systemProperty "failsafe.gitlab.key", System.getProperty("failsafe.gitlab.key")
    reports {
        html.enabled true
        junitXml.enabled true
    }
}

tasks.buildDashboard.dependsOn(build, htmlDependencyReport, jacocoTestReport, jacocoTestCoverageVerification)
